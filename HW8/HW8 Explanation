create new dictionary which will have values that associate with each letter.
iterate through the string and if the letter is already in the dictionary, increment the count, or else create a new letter with a key of 1
the length of the palindrome is 0 at this point and we have 0 letters that are odd in the moment
base case if letters only has one unique character return that lenght
for all the values that are in the dictionary    
if there are more than one of those letters in the string we do a check
the check is to see if it is even, and if it is that means that we can just add it to the palindrome bc there will be a way to make it equal on both sides
if the number of letters is odd, then we can add an even number of that odd amount of letters and then we can say that there is one odd letter reminaing that is not being used
if i is not greater than one, then we know that there must be only one element so we can just add one to odd anyways
this is a final check to see after the while loop if there are any odd singular elements that are not used, and if there is we can add it to the center of the string to make a palindrome so we add one to the length
return the final length